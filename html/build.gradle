gwt {
    gwtVersion='2.8.2' // Should match the gwt version used for building the gwt backend
    maxHeapSize="1G" // Default 256m is not enough for gwt compiler. GWT is HUNGRY
    minHeapSize="1G"

    src = files(file("src/")) // Needs to be in front of "modules" below.
    modules 'com.klemstinegroup.spacetubes.GdxDefinition'
    devModules 'com.klemstinegroup.spacetubes.GdxDefinitionSuperdev'
    project.webAppDirName = 'webapp'

    compiler {
        strict = true;
        disableCastChecking = true;
    }
}

import org.wisepersist.gradle.plugins.gwt.GwtSuperDev

def HttpFileServer server = null
def httpFilePort = 8080

task startHttpServer () {
    dependsOn draftCompileGwt

    String output = project.buildDir.path + "/gwt/draftOut"

    doLast {
        copy {
            from "webapp"
            into output
        }

        copy {
            from "war"
            into output
        }

        server = new SimpleHttpFileServerFactory().start(new File(output), httpFilePort)

        println "Server started in directory " + server.getContentRoot() + ", http://localhost:" + server.getPort()
    }
}

task superDev (type: GwtSuperDev) {
    dependsOn startHttpServer
    doFirst {
        gwt.modules = gwt.devModules
    }
}


task dist(dependsOn: [clean, compileGwt]) {
    doLast {
        file("build/dist").mkdirs()
        copy {
            from "build/gwt/out"
            into "build/dist"
        }
        copy {
            from "webapp"
            into "build/dist"
            }
        copy {
            from "war"
            into "build/dist"
        }
        file("../docs").deleteDir()
        file("../docs").mkdirs()
        delete "build/dist/WEB-INF"
        copy {
            from "build/dist"
            into "../docs"
        }
    }
}

task addSource {
    doLast {
        sourceSets.main.compileClasspath += files(project(':core').sourceSets.main.allJava.srcDirs)
    }
}

tasks.compileGwt.dependsOn(addSource)
tasks.draftCompileGwt.dependsOn(addSource)

sourceCompatibility = 1.7
sourceSets.main.java.srcDirs = [ "src/" ]

eclipse.project.name = appName + "-html"

apply plugin: 'org.ajoberstar.grgit'
version = "1.0.0-${grgit.head().abbreviatedId}"

task startIPFSDaemon{dependsOn dist
    doFirst {
        println("Start watching")
        ext.process = new ProcessBuilder()
                .directory(projectDir)
                .command("ipfs", "daemon")
                .start()
    }
}

task addToIPFS(type:Exec){dependsOn startIPFSDaemon
    commandLine 'ipfs','add','-r','build/dist'
//    ByteArrayOutputStream ba=new ByteArrayOutputStream()
//    standardOutput = ba
//    String[] splitOut=ba.toString().split('added');
//    System.out.println("http://ipfs.io/ipfs/"+splitOut[splitOut.length-1]);

//    System.out.println(standardOutput.toString())
}

task tagRelease {dependsOn addToIPFS
    description = 'Tags the current head with the project\'s version.'
    doLast {
        grgit.tag.add {
            name = version
            message = "Release of ${version}"
        }
    }
}

task pushToOrigin {dependsOn tagRelease
    description = 'Pushes current branch\'s committed changes to origin repo.'
    doLast {
        grgit.push()
    }
}

